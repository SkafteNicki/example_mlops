name: Quality check staged model

on:
  repository_dispatch:
    types: OPTIMIZE_AND_CONVERT
  workflow_dispatch:
    inputs:
      model_name:
        description: 'Model artifact to optimize and convert'
        required: true
        type: string

jobs:
  identify_event:
    runs-on: ubuntu-latest
    outputs:
      model_name: ${{ steps.set_output.outputs.model_name }}
    steps:
      - name: Check event type
        run: |
          if [ -n "${{ github.event.client_payload }}" ]; then
            echo "Event type: repository_dispatch"
            echo "Payload Data: ${{ toJson(github.event.client_payload) }}"
          elif [ -n "${{ github.event.inputs }}" ]; then
            echo "This is a workflow dispatch event"
            # Access input parameters if needed
            echo "Input Parameters: ${{ toJson(github.event.inputs) }}"
          else
            echo "Unknown event type"
          fi
      - name: Setting model environment variable and output
        id: set_output
        run: |
          if [ -n "${{ github.event.client_payload }}" ]; then
            echo "model_name=${{ github.event.client_payload.artifact_version_string }}" >> $GITHUB_OUTPUT
          elif [ -n "${{ github.event.inputs }}" ]; then
            echo "model_name=${{ github.event.inputs.model_name }}" >> $GITHUB_OUTPUT

  evaluate_model:
    runs-on: ubuntu-latest
    needs: identify_event
    env:
      WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}
      MODEL_NAME: ${{ needs.identify_event.outputs.model_name }}
    steps:
      - name: Echo model name
        run: |
          echo "Model name: $MODEL_NAME"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
          cache: 'pip'
          cache-dependency-path: setup.py

      - name: Install dependencies
        run: make dev_requirements

      - name: Auth with GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Pull data
        run: |
          dvc pull
          python -c "from pathlib import Path; print([str(file) for file in Path('data').rglob('*') if file.is_file()])"

      - name: Evaluate model
        run: evaluate model_checkpoint=$MODEL_NAME

      - name: Convert to ONNX and quantize
        run: model_manager export-and-quantize $MODEL_NAME

      - name: Evaluate ONNX model
        run: evaluate model_checkpoint=models/checkpoint.onnx upload_model=True

      - name: Link ONNX model to model registry
        run: model_manager link-latest-model mnist_model -a staging -a onnx

      - name: Evaluate quantized model
        run: evaluate model_checkpoint=models/checkpoint_quantized.onnx

      - name: Link quantized model to model registry
        run: model_manager link-latest-model mnist_model -a staging -a onnx -a quantized

  performance_tests:
    runs-on: ubuntu-latest
    needs: evaluate_model
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: setup.py

      - name: Install dependencies
        run: make dev_requirements

      - name: Run tests & coverage
        run: make tests

  deploy_staged_model:
    runs-on: ubuntu-latest
    needs: performance_tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: setup.py

      - name: Auth with GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Deploy model
        run: gcloud builds submit --config cloudbuild_containers.yaml --substitutions=_MODEL_NAME=$MODEL_NAME
