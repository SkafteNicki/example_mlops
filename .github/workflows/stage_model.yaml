name: Quality check staged model

on:
  repository_dispatch:
    types: OPTIMIZE_AND_CONVERT
  workflow_dispatch:
    inputs:
      model_name:
        description: 'Model artifact to optimize and convert'
        required: true
        type: string

jobs:
  identify_event:
    runs-on: ubuntu-latest
    steps:
      - name: Check event type
        run: |
          if [ -n "${{ github.event.client_payload }}" ]; then
            echo "Event type: repository_dispatch"
            echo "Payload Data: ${{ toJson(github.event.client_payload) }}"
          elif [ -n "${{ github.event.inputs }}" ]; then
            echo "This is a workflow dispatch event"
            # Access input parameters if needed
            echo "Input Parameters: ${{ toJson(github.event.inputs) }}"
          else
            echo "Unknown event type"
          fi
      - name: Setting model environment variable
        run: |
          if [ -n "${{ github.event.client_payload }}" ]; then
            echo "export MODEL_NAME=${{ github.event.client_payload.model_name }}" >> $GITHUB_ENV
          elif [ -n "${{ github.event.inputs }}" ]; then
            echo "export MODEL_NAME=${{ github.event.inputs.model_name }}" >> $GITHUB_ENV
          else:
            echo "Unknown event type"
          fi
      - name: Echo model name
        run: |
          echo "Model name: $MODEL_NAME"

  evaluate_model:
    runs-on: ubuntu-latest
    needs: identify_event
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
          cache: 'pip'
          cache-dependency-path: setup.py

      - name: Install dependencies
        run: make dev_requirements

      - name: Login weights and biases
        run: wandb login ${{ secrets.WANDB_API_KEY }}

      - name: Evaluate model
        run: evaluate model_checkpoint=$MODEL_NAME




  #     - name: Quantize model
  #       run: model_manager quantize

  #     - name: Convert to ONNX
  #       run: model_manager convert_to_onnx


  # performance_tests:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - env:
  #         MODEL_NAME: ${{ github.event.client_payload.model_name }}
  #       run: echo "Running performance tests for model $MODEL_NAME"

  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Set up Python
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: 3.11
  #         cache: 'pip'
  #         cache-dependency-path: setup.py

  #     - name: Install dependencies
  #       run: make dev_requirements

  #     - name: Run performance tests
  #       run: model_manager run_performance_tests
