steps:
- name: "alpine"
  id: "Replace values in the training config"
  entrypoint: "sh"
  args:
    - '-c'
    - |
      apk add --no-cache gettext
      envsubst < ${_VERTEX_TRAIN_CONFIG} > ${_VERTEX_TRAIN_CONFIG}.tmp
      mv ${_VERTEX_TRAIN_CONFIG}.tmp ${_VERTEX_TRAIN_CONFIG}
  secretEnv: ['WANDB_API_KEY', 'WANDB_ENTITY', 'WANDB_PROJECT']

- name: 'alpine'
  id: "Show config"
  entrypoint: "sh"
  args:
    - '-c'
    - |
      cat ${_VERTEX_TRAIN_CONFIG}

- name: 'gcr.io/cloud-builders/gcloud'
  id: 'Train on vertex AI'
  waitFor: ['Replace values in the training config']
  args: [
    'ai',
    'custom-jobs',
    'create',
    '--region',
    'europe-west1',
    '--display-name',
    'example-mlops-job',
    '--config',
    '${_VERTEX_TRAIN_CONFIG}',
    '--command',
    'train',
    '--args',
    '${_VERTEX_TRAIN_ARGS}',
  ]
availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_ID/secrets/WANDB_API_KEY/versions/latest
    env: 'WANDB_API_KEY'
  - versionName: projects/$PROJECT_ID/secrets/WANDB_ENTITY/versions/latest
    env: 'WANDB_ENTITY'
  - versionName: projects/$PROJECT_ID/secrets/WANDB_PROJECT/versions/latest
    env: 'WANDB_PROJECT'
substitutions:
  _VERTEX_TRAIN_CONFIG: 'configs/gcp/vertex_cpu.yaml'
  _VERTEX_TRAIN_ARGS: 'datamodule.data=/gcs/example_mlops_data/data'
# options:
#   logging: CLOUD_LOGGING_ONLY
